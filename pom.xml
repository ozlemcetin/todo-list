<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>academy.learnprogramming</groupId>
    <artifactId>todo-list</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!--since this is a web application we need to package it as a web application archive or a war file-->
    <!--packaging-->
    <packaging>war</packaging>

    <!-- properties -->
    <properties>

        <java.version>11</java.version>
        <spring-webmvc.version>5.2.8.RELEASE</spring-webmvc.version>
        <lombok.version>1.18.12</lombok.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <jstl.version>1.2</jstl.version>
    </properties>

    <!--dependencies -->
    <dependencies>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-webmvc.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
            <!-- <scope>test</scope>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${javax.annotation-api.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <!-- <scope>provided</scope>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
            <scope>provided</scope>
            <!--provided means the servlet container (tomcat) will provide this dependency for us at runtime-->
            <!--we don't have to package it within our war file -->
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl -->
        <dependency>
            <!--Cannot resolve javax.servlet.jsp.jstl:jstl:1.2-->
            <!--<groupId>javax.servlet.jsp.jstl</groupId>-->
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>

            <!-- maven-compiler-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <target>${java.version}</target>
                    <source>${java.version}</source>
                    <release>${java.version}</release>
                </configuration>
            </plugin>

            <!--maven-war-plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--maven-cargo-plugin-->
            <!--we can use goals to manipulate war projects within the Apache Tomcat servlet container-->
            <!--we can run tomcat in embedded mode -->
            <!--this plugin helps us to quickly develop an application
                w/o need to install a standalone tomcat web container -->

            <!--
                <container>
                    <type>embedded or remote</type>
                </container>

                <configuration>
                    <type>standalone, existing or runtime</type>
                </configuration>
            -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.8.0</version>
                <configuration>
                    <container>
                        <containerId>tomcat9x</containerId>
                        <type>embedded</type>
                    </container>
                </configuration>
            </plugin>

        </plugins>

    </build>


</project>